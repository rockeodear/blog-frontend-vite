{
  "version": 3,
  "sources": ["../hast-util-is-element/convert.js"],
  "sourcesContent": ["'use strict'\n\nmodule.exports = convert\n\nfunction convert(test) {\n  if (typeof test === 'string') {\n    return tagNameFactory(test)\n  }\n\n  if (test === null || test === undefined) {\n    return element\n  }\n\n  if (typeof test === 'object') {\n    return any(test)\n  }\n\n  if (typeof test === 'function') {\n    return callFactory(test)\n  }\n\n  throw new Error('Expected function, string, or array as test')\n}\n\nfunction convertAll(tests) {\n  var length = tests.length\n  var index = -1\n  var results = []\n\n  while (++index < length) {\n    results[index] = convert(tests[index])\n  }\n\n  return results\n}\n\nfunction any(tests) {\n  var checks = convertAll(tests)\n  var length = checks.length\n\n  return matches\n\n  function matches() {\n    var index = -1\n\n    while (++index < length) {\n      if (checks[index].apply(this, arguments)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n// Utility to convert a string a tag name check.\nfunction tagNameFactory(test) {\n  return tagName\n\n  function tagName(node) {\n    return element(node) && node.tagName === test\n  }\n}\n\n// Utility to convert a function check.\nfunction callFactory(test) {\n  return call\n\n  function call(node) {\n    return element(node) && Boolean(test.apply(this, arguments))\n  }\n}\n\n// Utility to return true if this is an element.\nfunction element(node) {\n  return (\n    node &&\n    typeof node === 'object' &&\n    node.type === 'element' &&\n    typeof node.tagName === 'string'\n  )\n}\n"],
  "mappings": ";;;;;AAAA;AAAA;AAAA;AAEA,WAAO,UAAU;AAEjB,qBAAiB,MAAM;AACrB,UAAI,OAAO,SAAS,UAAU;AAC5B,eAAO,eAAe;AAAA;AAGxB,UAAI,SAAS,QAAQ,SAAS,QAAW;AACvC,eAAO;AAAA;AAGT,UAAI,OAAO,SAAS,UAAU;AAC5B,eAAO,IAAI;AAAA;AAGb,UAAI,OAAO,SAAS,YAAY;AAC9B,eAAO,YAAY;AAAA;AAGrB,YAAM,IAAI,MAAM;AAAA;AAGlB,wBAAoB,OAAO;AACzB,UAAI,SAAS,MAAM;AACnB,UAAI,QAAQ;AACZ,UAAI,UAAU;AAEd,aAAO,EAAE,QAAQ,QAAQ;AACvB,gBAAQ,SAAS,QAAQ,MAAM;AAAA;AAGjC,aAAO;AAAA;AAGT,iBAAa,OAAO;AAClB,UAAI,SAAS,WAAW;AACxB,UAAI,SAAS,OAAO;AAEpB,aAAO;AAEP,yBAAmB;AACjB,YAAI,QAAQ;AAEZ,eAAO,EAAE,QAAQ,QAAQ;AACvB,cAAI,OAAO,OAAO,MAAM,MAAM,YAAY;AACxC,mBAAO;AAAA;AAAA;AAIX,eAAO;AAAA;AAAA;AAKX,4BAAwB,MAAM;AAC5B,aAAO;AAEP,uBAAiB,MAAM;AACrB,eAAO,QAAQ,SAAS,KAAK,YAAY;AAAA;AAAA;AAK7C,yBAAqB,MAAM;AACzB,aAAO;AAEP,oBAAc,MAAM;AAClB,eAAO,QAAQ,SAAS,QAAQ,KAAK,MAAM,MAAM;AAAA;AAAA;AAKrD,qBAAiB,MAAM;AACrB,aACE,QACA,OAAO,SAAS,YAChB,KAAK,SAAS,aACd,OAAO,KAAK,YAAY;AAAA;AAAA;AAAA;",
  "names": []
}

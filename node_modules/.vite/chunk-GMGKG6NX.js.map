{
  "version": 3,
  "sources": ["../mdast-util-to-markdown/lib/util/container-phrasing.js", "../mdast-util-to-markdown/lib/util/container-flow.js", "../mdast-util-to-markdown/lib/util/indent-lines.js"],
  "sourcesContent": ["module.exports = phrasing\n\nfunction phrasing(parent, context, safeOptions) {\n  var children = parent.children || []\n  var results = []\n  var index = -1\n  var before = safeOptions.before\n  var after\n  var handle\n  var child\n\n  while (++index < children.length) {\n    child = children[index]\n\n    if (index + 1 < children.length) {\n      handle = context.handle.handlers[children[index + 1].type]\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, context, {\n            before: '',\n            after: ''\n          }).charAt(0)\n        : ''\n    } else {\n      after = safeOptions.after\n    }\n\n    // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we\u2019d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can\u2019t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n    if (\n      results.length > 0 &&\n      (before === '\\r' || before === '\\n') &&\n      child.type === 'html'\n    ) {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        ' '\n      )\n      before = ' '\n    }\n\n    results.push(\n      context.handle(child, parent, context, {\n        before: before,\n        after: after\n      })\n    )\n\n    before = results[results.length - 1].slice(-1)\n  }\n\n  return results.join('')\n}\n", "module.exports = flow\n\nvar repeat = require('repeat-string')\n\nfunction flow(parent, context) {\n  var children = parent.children || []\n  var results = []\n  var index = -1\n  var child\n\n  while (++index < children.length) {\n    child = children[index]\n\n    results.push(\n      context.handle(child, parent, context, {before: '\\n', after: '\\n'})\n    )\n\n    if (index + 1 < children.length) {\n      results.push(between(child, children[index + 1]))\n    }\n  }\n\n  return results.join('')\n\n  function between(left, right) {\n    var index = -1\n    var result\n\n    while (++index < context.join.length) {\n      result = context.join[index](left, right, parent, context)\n\n      if (result === true || result === 1) {\n        break\n      }\n\n      if (typeof result === 'number') {\n        return repeat('\\n', 1 + Number(result))\n      }\n\n      if (result === false) {\n        return '\\n\\n<!---->\\n\\n'\n      }\n    }\n\n    return '\\n\\n'\n  }\n}\n", "module.exports = indentLines\n\nvar eol = /\\r?\\n|\\r/g\n\nfunction indentLines(value, map) {\n  var result = []\n  var start = 0\n  var line = 0\n  var match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n"],
  "mappings": ";;;;;;;;AAAA;AAAA;AAAA,WAAO,UAAU;AAEjB,sBAAkB,QAAQ,SAAS,aAAa;AAC9C,UAAI,WAAW,OAAO,YAAY;AAClC,UAAI,UAAU;AACd,UAAI,QAAQ;AACZ,UAAI,SAAS,YAAY;AACzB,UAAI;AACJ,UAAI;AACJ,UAAI;AAEJ,aAAO,EAAE,QAAQ,SAAS,QAAQ;AAChC,gBAAQ,SAAS;AAEjB,YAAI,QAAQ,IAAI,SAAS,QAAQ;AAC/B,mBAAS,QAAQ,OAAO,SAAS,SAAS,QAAQ,GAAG;AACrD,cAAI,UAAU,OAAO;AAAM,qBAAS,OAAO;AAC3C,kBAAQ,SACJ,OAAO,SAAS,QAAQ,IAAI,QAAQ,SAAS;AAAA,YAC3C,QAAQ;AAAA,YACR,OAAO;AAAA,aACN,OAAO,KACV;AAAA,eACC;AACL,kBAAQ,YAAY;AAAA;AAStB,YACE,QAAQ,SAAS,KAChB,YAAW,QAAQ,WAAW,SAC/B,MAAM,SAAS,QACf;AACA,kBAAQ,QAAQ,SAAS,KAAK,QAAQ,QAAQ,SAAS,GAAG,QACxD,eACA;AAEF,mBAAS;AAAA;AAGX,gBAAQ,KACN,QAAQ,OAAO,OAAO,QAAQ,SAAS;AAAA,UACrC;AAAA,UACA;AAAA;AAIJ,iBAAS,QAAQ,QAAQ,SAAS,GAAG,MAAM;AAAA;AAG7C,aAAO,QAAQ,KAAK;AAAA;AAAA;AAAA;;;ACvDtB;AAAA;AAAA,WAAO,UAAU;AAEjB,QAAI,SAAS;AAEb,kBAAc,QAAQ,SAAS;AAC7B,UAAI,WAAW,OAAO,YAAY;AAClC,UAAI,UAAU;AACd,UAAI,QAAQ;AACZ,UAAI;AAEJ,aAAO,EAAE,QAAQ,SAAS,QAAQ;AAChC,gBAAQ,SAAS;AAEjB,gBAAQ,KACN,QAAQ,OAAO,OAAO,QAAQ,SAAS,EAAC,QAAQ,MAAM,OAAO;AAG/D,YAAI,QAAQ,IAAI,SAAS,QAAQ;AAC/B,kBAAQ,KAAK,QAAQ,OAAO,SAAS,QAAQ;AAAA;AAAA;AAIjD,aAAO,QAAQ,KAAK;AAEpB,uBAAiB,MAAM,OAAO;AAC5B,YAAI,SAAQ;AACZ,YAAI;AAEJ,eAAO,EAAE,SAAQ,QAAQ,KAAK,QAAQ;AACpC,mBAAS,QAAQ,KAAK,QAAO,MAAM,OAAO,QAAQ;AAElD,cAAI,WAAW,QAAQ,WAAW,GAAG;AACnC;AAAA;AAGF,cAAI,OAAO,WAAW,UAAU;AAC9B,mBAAO,OAAO,MAAM,IAAI,OAAO;AAAA;AAGjC,cAAI,WAAW,OAAO;AACpB,mBAAO;AAAA;AAAA;AAIX,eAAO;AAAA;AAAA;AAAA;AAAA;;;AC5CX;AAAA;AAAA,WAAO,UAAU;AAEjB,QAAI,MAAM;AAEV,yBAAqB,OAAO,KAAK;AAC/B,UAAI,SAAS;AACb,UAAI,QAAQ;AACZ,UAAI,OAAO;AACX,UAAI;AAEJ,aAAQ,QAAQ,IAAI,KAAK,QAAS;AAChC,YAAI,MAAM,MAAM,OAAO,MAAM;AAC7B,eAAO,KAAK,MAAM;AAClB,gBAAQ,MAAM,QAAQ,MAAM,GAAG;AAC/B;AAAA;AAGF,UAAI,MAAM,MAAM;AAEhB,aAAO,OAAO,KAAK;AAEnB,mBAAa,QAAO;AAClB,eAAO,KAAK,IAAI,QAAO,MAAM,CAAC;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}

{
  "version": 3,
  "sources": ["../mdast-util-to-markdown/lib/util/pattern-in-scope.js", "../mdast-util-to-markdown/lib/util/safe.js"],
  "sourcesContent": ["module.exports = patternInScope\n\nfunction patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct)\n  )\n}\n\nfunction listInScope(stack, list, none) {\n  var index\n\n  if (!list) {\n    return none\n  }\n\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  index = -1\n\n  while (++index < list.length) {\n    if (stack.indexOf(list[index]) !== -1) {\n      return true\n    }\n  }\n\n  return false\n}\n", "module.exports = safe\n\nvar patternCompile = require('./pattern-compile')\nvar patternInScope = require('./pattern-in-scope')\n\nfunction safe(context, input, config) {\n  var value = (config.before || '') + (input || '') + (config.after || '')\n  var positions = []\n  var result = []\n  var infos = {}\n  var index = -1\n  var before\n  var after\n  var position\n  var pattern\n  var expression\n  var match\n  var start\n  var end\n\n  while (++index < context.unsafe.length) {\n    pattern = context.unsafe[index]\n\n    if (!patternInScope(context.stack, pattern)) {\n      continue\n    }\n\n    expression = patternCompile(pattern)\n\n    while ((match = expression.exec(value))) {\n      before = 'before' in pattern || pattern.atBreak\n      after = 'after' in pattern\n\n      position = match.index + (before ? match[1].length : 0)\n\n      if (positions.indexOf(position) === -1) {\n        positions.push(position)\n        infos[position] = {before: before, after: after}\n      } else {\n        if (infos[position].before && !before) {\n          infos[position].before = false\n        }\n\n        if (infos[position].after && !after) {\n          infos[position].after = false\n        }\n      }\n    }\n  }\n\n  positions.sort(numerical)\n\n  start = config.before ? config.before.length : 0\n  end = value.length - (config.after ? config.after.length : 0)\n  index = -1\n\n  while (++index < positions.length) {\n    position = positions[index]\n\n    if (\n      // Character before or after matched:\n      position < start ||\n      position >= end\n    ) {\n      continue\n    }\n\n    // If this character is supposed to be escaped because it has a condition on\n    // the next character, and the next character is definitly being escaped,\n    // then skip this escape.\n    if (\n      position + 1 < end &&\n      positions[index + 1] === position + 1 &&\n      infos[position].after &&\n      !infos[position + 1].before &&\n      !infos[position + 1].after\n    ) {\n      continue\n    }\n\n    if (start !== position) {\n      // If we have to use a character reference, an ampersand would be more\n      // correct, but as backslashes only care about punctuation, either will\n      // do the trick\n      result.push(escapeBackslashes(value.slice(start, position), '\\\\'))\n    }\n\n    start = position\n\n    if (\n      /[!-/:-@[-`{-~]/.test(value.charAt(position)) &&\n      (!config.encode || config.encode.indexOf(value.charAt(position)) === -1)\n    ) {\n      // Character escape.\n      result.push('\\\\')\n    } else {\n      // Character reference.\n      result.push(\n        '&#x' + value.charCodeAt(position).toString(16).toUpperCase() + ';'\n      )\n      start++\n    }\n  }\n\n  result.push(escapeBackslashes(value.slice(start, end), config.after))\n\n  return result.join('')\n}\n\nfunction numerical(a, b) {\n  return a - b\n}\n\nfunction escapeBackslashes(value, after) {\n  var expression = /\\\\(?=[!-/:-@[-`{-~])/g\n  var positions = []\n  var results = []\n  var index = -1\n  var start = 0\n  var whole = value + after\n  var match\n\n  while ((match = expression.exec(whole))) {\n    positions.push(match.index)\n  }\n\n  while (++index < positions.length) {\n    if (start !== positions[index]) {\n      results.push(value.slice(start, positions[index]))\n    }\n\n    results.push('\\\\')\n    start = positions[index]\n  }\n\n  results.push(value.slice(start))\n\n  return results.join('')\n}\n"],
  "mappings": "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",
  "names": []
}

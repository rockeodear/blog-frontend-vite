{
  "version": 3,
  "sources": ["../repeat-string/index.js"],
  "sourcesContent": ["/*!\n * repeat-string <https://github.com/jonschlinkert/repeat-string>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\n/**\n * Results cache\n */\n\nvar res = '';\nvar cache;\n\n/**\n * Expose `repeat`\n */\n\nmodule.exports = repeat;\n\n/**\n * Repeat the given `string` the specified `number`\n * of times.\n *\n * **Example:**\n *\n * ```js\n * var repeat = require('repeat-string');\n * repeat('A', 5);\n * //=> AAAAA\n * ```\n *\n * @param {String} `string` The string to repeat\n * @param {Number} `number` The number of times to repeat the string\n * @return {String} Repeated string\n * @api public\n */\n\nfunction repeat(str, num) {\n  if (typeof str !== 'string') {\n    throw new TypeError('expected a string');\n  }\n\n  // cover common, quick use cases\n  if (num === 1) return str;\n  if (num === 2) return str + str;\n\n  var max = str.length * num;\n  if (cache !== str || typeof cache === 'undefined') {\n    cache = str;\n    res = '';\n  } else if (res.length >= max) {\n    return res.substr(0, max);\n  }\n\n  while (max > res.length && num > 1) {\n    if (num & 1) {\n      res += str;\n    }\n\n    num >>= 1;\n    str += str;\n  }\n\n  res += str;\n  res = res.substr(0, max);\n  return res;\n}\n"],
  "mappings": ";;;;;AAAA;AAAA;AAOA;AAMA,QAAI,MAAM;AACV,QAAI;AAMJ,WAAO,UAAU;AAoBjB,oBAAgB,KAAK,KAAK;AACxB,UAAI,OAAO,QAAQ,UAAU;AAC3B,cAAM,IAAI,UAAU;AAAA;AAItB,UAAI,QAAQ;AAAG,eAAO;AACtB,UAAI,QAAQ;AAAG,eAAO,MAAM;AAE5B,UAAI,MAAM,IAAI,SAAS;AACvB,UAAI,UAAU,OAAO,OAAO,UAAU,aAAa;AACjD,gBAAQ;AACR,cAAM;AAAA,iBACG,IAAI,UAAU,KAAK;AAC5B,eAAO,IAAI,OAAO,GAAG;AAAA;AAGvB,aAAO,MAAM,IAAI,UAAU,MAAM,GAAG;AAClC,YAAI,MAAM,GAAG;AACX,iBAAO;AAAA;AAGT,gBAAQ;AACR,eAAO;AAAA;AAGT,aAAO;AACP,YAAM,IAAI,OAAO,GAAG;AACpB,aAAO;AAAA;AAAA;AAAA;",
  "names": []
}

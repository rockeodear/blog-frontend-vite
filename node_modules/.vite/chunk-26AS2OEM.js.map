{
  "version": 3,
  "sources": ["../micromark/dist/util/size-chunks.js", "../micromark/dist/util/prefix-size.js", "../micromark/dist/character/markdown-space.js", "../micromark/dist/tokenize/factory-space.js"],
  "sourcesContent": ["'use strict'\n\n// Counts tabs based on their expanded size, and CR+LF as one character.\n\nfunction sizeChunks(chunks) {\n  var index = -1\n  var size = 0\n\n  while (++index < chunks.length) {\n    size += typeof chunks[index] === 'string' ? chunks[index].length : 1\n  }\n\n  return size\n}\n\nmodule.exports = sizeChunks\n", "'use strict'\n\nvar sizeChunks = require('./size-chunks.js')\n\nfunction prefixSize(events, type) {\n  var tail = events[events.length - 1]\n  if (!tail || tail[1].type !== type) return 0\n  return sizeChunks(tail[2].sliceStream(tail[1]))\n}\n\nmodule.exports = prefixSize\n", "'use strict'\n\nfunction markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\nmodule.exports = markdownSpace\n", "'use strict'\n\nvar markdownSpace = require('../character/markdown-space.js')\n\nfunction spaceFactory(effects, ok, type, max) {\n  var limit = max ? max - 1 : Infinity\n  var size = 0\n  return start\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n\nmodule.exports = spaceFactory\n"],
  "mappings": ";;;;;AAAA;AAAA;AAAA;AAIA,wBAAoB,QAAQ;AAC1B,UAAI,QAAQ;AACZ,UAAI,OAAO;AAEX,aAAO,EAAE,QAAQ,OAAO,QAAQ;AAC9B,gBAAQ,OAAO,OAAO,WAAW,WAAW,OAAO,OAAO,SAAS;AAAA;AAGrE,aAAO;AAAA;AAGT,WAAO,UAAU;AAAA;AAAA;;;ACfjB;AAAA;AAAA;AAEA,QAAI,aAAa;AAEjB,wBAAoB,QAAQ,MAAM;AAChC,UAAI,OAAO,OAAO,OAAO,SAAS;AAClC,UAAI,CAAC,QAAQ,KAAK,GAAG,SAAS;AAAM,eAAO;AAC3C,aAAO,WAAW,KAAK,GAAG,YAAY,KAAK;AAAA;AAG7C,WAAO,UAAU;AAAA;AAAA;;;ACVjB;AAAA;AAAA;AAEA,2BAAuB,MAAM;AAC3B,aAAO,SAAS,MAAM,SAAS,MAAM,SAAS;AAAA;AAGhD,WAAO,UAAU;AAAA;AAAA;;;ACNjB;AAAA;AAAA;AAEA,QAAI,gBAAgB;AAEpB,0BAAsB,SAAS,IAAI,MAAM,KAAK;AAC5C,UAAI,QAAQ,MAAM,MAAM,IAAI;AAC5B,UAAI,OAAO;AACX,aAAO;AAEP,qBAAe,MAAM;AACnB,YAAI,cAAc,OAAO;AACvB,kBAAQ,MAAM;AACd,iBAAO,OAAO;AAAA;AAGhB,eAAO,GAAG;AAAA;AAGZ,sBAAgB,MAAM;AACpB,YAAI,cAAc,SAAS,SAAS,OAAO;AACzC,kBAAQ,QAAQ;AAChB,iBAAO;AAAA;AAGT,gBAAQ,KAAK;AACb,eAAO,GAAG;AAAA;AAAA;AAId,WAAO,UAAU;AAAA;AAAA;",
  "names": []
}
